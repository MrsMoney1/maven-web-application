pipeline{
  agent {
    label 'buildNode'
  } 
  tools {
    maven '3.9.1'
  }
  //options{}
  //triggers{}
  stages {
    stage('1Clone'){
      steps{
        sh "echo 'cloning the latest application version' "
        git  "https://github.com/MrsMoney1/maven-web-application"
        sh "echo 'latest application version available for testing and build' "
      }
    }
    stage('2TestBuild'){
      steps{
        sh "echo 'running JUnit-test-cases' "
        sh "echo 'testing must passed to create artifacts ' "
        sh "mvn clean package" 
      }
    }
    stage('3CodeQualityAnalysis') {
    steps{
        sh "echo setup sonarQube authentication"
        sh "echo 'Perfoming CodeQualityAnalysis' "
        sh "mvn sonar:sonar"  
      }
    }
    stage('4UploadArtifacts') {
    steps{
      sh "echo configure nexus authentication"
      //sh "mvn deploy"
      sh "echo artifacts uploaded"
     }
    }
    stage('5Deploy') {
        steps{
            deploy adapters: [tomcat9(credentialsId: 'tomcat-Credentials', path: '', url: 'http://18.233.0.85:8177/')], contextPath: null, war: 'target/*.war'
        }
    }
  }
  post{
      always{
          emailext body: '''Well done, Team

PAYPAL_PROD TEAM''', recipientProviders: [buildUser(), developers()], subject: 'Build Success', to: 'fatolagbe13@yahoo.com'
      }
      success{
          emailext body: '''Well done, Team

PAYPAL_PROD TEAM''', recipientProviders: [buildUser(), developers()], subject: 'Build Success', to: 'fatolagbe13@yahoo.com'
      }
      failure{
      emailext body: '''Please, review this job team.

PAYPAL_PROD TEAM''', recipientProviders: [buildUser(), developers()], subject: 'Build failed', to: 'fatolagbe13@yahoo.com'}
  }
}
